Test Fullstack Developer
=========================

Objectif
--------
L'objectif de ce test est d'évaluer vos compétence à interagir avec une API tierce ainsi que votre faculté à architecturer et mettre en oeuvre un projet fullstack.

Description
-----------
Un utilisateur arrive sur l'application et démarre un jeu. L'application lui affiche un mot en Français et l'utilisateur doit trouver sa traduction en Anglais. Pour le guider, l'application affiche également (de la manière que vous le souhaitez) la première lettre et le nombre de lettres du mot à trouver.

L'utilisateur démarre avec un capital de 10 points. Si il se trompe de mot, il perd un point. Si il trouve le bon mot, il gagne un point.

Si l'utilisateur arrive à 0 points il a perdu. Si il arrive à 20 points il a gagné.

Vous devrez utiliser le fichier verbe.txt fourni en pièce jointe pour peupler votre base de données avec une liste de 500 verbes en Français. Pendant le déroulement de la partie, votre côté client appelle le serveur pour réclamer un mot en Français. Celui-ci sélectionne un mot de cette liste et utilise un service de traduction de votre choix (quelque chose de similaire à Google Traduction) pour trouver à la volée la traduction de ce mot en Anglais. Le serveur doit donc retourner au client le mot en Français et en Anglais.

Bonus
-----
Pour rendre l'application plus intéressente, vous pouvez optionnellement attribuer à chaque mot un niveau de difficulté (choisi aléatoirement) et rendre la partie intelligente : retourner un mot simple si l'utilisateur perd, retourner un mot compliqué si l'utilisateur gagne.

Tech
----
Les technologies attendues sont HTML5, CSS3 et JavaScript côté client et Node.js côté Backend. Vous êtes libre de choisir votre base de données.

Modalités
---------
Pour que nous puissions évaluer votre code vous utiliserez git pour gérer ce mini-projet et vous rédigerez un README.md expliquant comment installer et lancer votre application. Vous nous fournirez donc simplement un lien vers votre répertoire GitHub.

Dans ce README.md, nous souhaitons aussi que vous détailliez le fonctionnement technique de votre application, les points que vous pensez pouvoir améliorer et comment.

Vous y indiquerez également le temps que vous avez passé à développer ce programme.


Nous tiendrons également compte de la facilité d'utilisation de votre application (UX) mais nous ne vous demandons pas de passer du temps à construire une interface graphique sophistiquée (UI). Un utilisateur n'ayant pas eu cet énoncé doit facilement comprendre le jeu et y jouer.